//- Display a clickable value
mixin clickableValue(expr, value, parse)
  -
    function defineField(field) {
      return "fields['" + field + "']";
    }
  moloch-session-field.detail-field(:expr='"'+expr+'"', :value=value, :field=defineField(expr), timezone=user.settings.timezone, :pull-left="true")

//- Method to add a menu to field labels
mixin clickableLabel(field, title)
  b-dropdown.clickable-label(size="sm", text=title, variant="default")
    b-dropdown-item(@click="exportUnique('" + field  + "', 0)")
      | Export Unique #{title}
    b-dropdown-item(@click="exportUnique('" + field  + "', 1)")
      | Export Unique #{title} with counts
    b-dropdown-item(@click="openSpiGraph('" + field  + "')")
      | Open #{title} SPI Graph

mixin arrayPrint(container, field, expr)
  if ((container && container[field]))
    each value,i in container[field]
      if (value.length == 0)
        span &lt;empty&gt;
      else
        moloch-session-field.detail-field(:expr='"'+expr+'"', :value='"'+value+'"', :field="fields['"+expr+"']", :pull-left="true")

//- Standard method to print an array of values
mixin arrayList(container, field, title, expr, extra, max)
  if (!max)
    - max = 25
  if ((container && container[field]) || extra)
    dt
      +clickableLabel(expr, title)
    dd
      if (container && container[field])
        each value,i in container[field]
          if (i == max)
            |<span style="display:none">
          if (value.length == 0)
            span &lt;empty&gt;
          else
            moloch-session-field.detail-field(:expr='"'+expr+'"', :value='"'+value+'"', :field="fields['"+expr+"']", :pull-left="true")
        if (container[field].length > max)
          |<a class="cursor-pointer show-more-items" @click="showFewerItems($event)">less...</a></span>
          a.cursor-pointer.show-more-items(@click="showMoreItems($event)") more...
      if (extra)
        |!{extra}
      div(style="display:inline-block;") &nbsp;

//- Standard method to print an array of values with commas
mixin stringList(container, field, title, expr, extra)
  if ((container && container[field]) || extra)
    dt
      +clickableLabel(expr, title)
    dd
      if (container && container[field])
        - value = container[field]
        if (value.length == 0)
          span &lt;empty&gt;
        else
          moloch-session-field.detail-field(:expr='"'+expr+'"', :value='"'+value+'"', :field="fields['"+expr+"']", :pull-left="true")
      if (extra)
        if (container && container[field] && container[field].length > 0)
          |,
        |!{extra}

//- Standard method to print ip, port, geo, asn, and rir info
mixin ipPrint(session, ipstr, port, geo, as, rir, expr, full, v6)
  span
    if (full)
      moloch-session-field.detail-field(:expr='"'+expr+'"', :value='"'+ipstr+'"', :field="fields['"+expr+"']", :pull-left="true", :session="session")
    else
      moloch-session-field.detail-field(:expr='"ip.'+expr+'"', :value='"'+ipstr+'"', :field="fields['ip."+expr+"']", :pull-left="true", :session="session")
    - if (port !== undefined)
      strong :
      if (full)
        moloch-session-field.detail-field(:expr='"'+expr+'.port"', :value='"'+port+'"', :field="fields['"+expr+".port']", :pull-left="true")
      else
        moloch-session-field.detail-field(:expr='"port.'+expr+'"', :value='"'+port+'"', :field="fields['port."+expr+"']", :pull-left="true")
    - if (geo)
      | (
      if (full)
        moloch-session-field.detail-field(:expr='"'+expr+'.country"', :value='"'+geo+'"', :field="fields['"+expr+".country']", :pull-left="true")
      else
        moloch-session-field.detail-field(:expr='"country.'+expr+'"', :value='"'+geo+'"', :field="fields['country."+expr+"']", :pull-left="true")
      |) &nbsp;
    - if (as)
      | [
      if (full)
        moloch-session-field.detail-field(:expr='"'+expr+'.asn"', :value='"'+as+'"', :field="fields['"+expr+".asn']", :pull-left="true")
      else
        moloch-session-field.detail-field(:expr='"asn.'+expr+'"', :value='"'+as+'"', :field="fields['asn."+expr+"']", :pull-left="true")
      |] &nbsp;
    - if (rir)
      | {
      if (full)
        moloch-session-field.detail-field(:expr='"'+expr+'.rir"', :value='"'+rir+'"', :field="fields['"+expr+".rir']", :pull-left="true")
      else
        moloch-session-field.detail-field(:expr='"rir.'+expr+'"', :value='"'+rir+'"', :field="fields['rir."+expr+"']", :pull-left="true")
      |}

//- Standard method to print ip info with commas
mixin ipArrayList(container, field, title, expr, max)
  if (!max)
    - max = 25
  if (container[field])
    dt
      b-dropdown.clickable-label(text=title, size="sm", variant="default")
        b-dropdown-item(@click="exportUnique('" + expr  + "', 0)")
          | Export Unique #{title}
        b-dropdown-item(@click="exportUnique('" + expr  + "', 1)")
          | Export Unique #{title} with counts
        b-dropdown-item(@click="openSpiGraph('" + expr  + "')")
          | Open #{title} SPI Graph
        b-dropdown-divider
        b-dropdown-item(@click="exportUnique('" + expr  + ".country', 0)")
          | Export Unique #{title} Country
        b-dropdown-item(@click="exportUnique('" + expr  + ".country', 1)")
          | Export Unique #{title} Country with counts
        b-dropdown-item(@click="openSpiGraph('" + expr  + ".country')")
          | Open #{title} Country SPI Graph
        b-dropdown-divider
        b-dropdown-item(@click="exportUnique('" + expr  + ".asn', 0)")
          | Export Unique #{title} ASN
        b-dropdown-item(@click="exportUnique('" + expr  + ".asn', 1)")
          | Export Unique #{title} ASN with counts
        b-dropdown-item(@click="openSpiGraph('" + expr  + ".asn')")
          | Open #{title} ASN SPI Graph
        b-dropdown-divider
        b-dropdown-item(@click="exportUnique('" + expr  + ".rir', 0)")
          | Export Unique #{title} RIR
        b-dropdown-item(@click="exportUnique('" + expr  + ".rir', 1)")
          | Export Unique #{title} RIR with counts
        b-dropdown-item(@click="openSpiGraph('" + expr  + ".rir')")
          | Open #{title} RIR SPI Graph

    dd
      each ip,i in container[field]
        if (i == max)
          |<span style="display:none">
        +ipPrint(container, container[field][i], undefined, (container[field + "-geo"]?container[field + "-geo"][i]:null), (container[field + "-asn"]?container[field + "-asn"][i]:null), (container[field + "-rir"]?container[field + "-rir"][i]:null), expr, true)
      if (container[field].length > max)
        |</span>
        a.cursor-pointer.show-more-items &hellip;
